{"ast":null,"code":"var _jsxFileName = \"/Users/michaeltrilford/Github/PAYCPreWeb3/src/components/gas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Fast from './icons/fast';\nimport Medium from './icons/medium';\nimport Slow from './icons/slow';\nimport Eth from './icons/eth';\nimport Stack from './stack';\nimport Body from './body';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GasTracker = () => {\n  _s();\n  const [gasData, setGasData] = useState(null);\n  const [ethereumPrice, setEthereumPrice] = useState(null);\n  useEffect(() => {\n    // Fetch gas price data from Etherscan (similar to previous example)\n\n    // Fetch current Ethereum price from CoinGecko\n    fetch('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd').then(response => response.json()).then(data => {\n      if (data.ethereum && data.ethereum.usd) {\n        setEthereumPrice({\n          usd: data.ethereum.usd\n        });\n      } else {\n        console.error('Error fetching Ethereum price data');\n      }\n    }).catch(error => {\n      console.error('Error fetching Ethereum price data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"HORIZONTAL\",\n    space: 'var(--scale-16)',\n    localStyles: {\n      maxWidth: 225,\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"HORIZONTAL\",\n      space: 'var(--scale-4)',\n      localStyles: {\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Eth, {\n        theme: \"LIGHT\",\n        size: \"S\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), ethereumPrice !== null ? /*#__PURE__*/_jsxDEV(Body, {\n        size: \"S\",\n        children: [\"$\", ethereumPrice.usd]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Body, {\n        size: \"S\",\n        children: \"Loading Ethereum price...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), gasData !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"HORIZONTAL\",\n        space: 'var(--scale-4)',\n        localStyles: {\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Fast, {\n          theme: \"LIGHT\",\n          size: \"S\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Body, {\n          size: \"S\",\n          children: gasData.fast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"HORIZONTAL\",\n        space: 'var(--scale-4)',\n        localStyles: {\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Medium, {\n          theme: \"LIGHT\",\n          size: \"S\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Body, {\n          size: \"S\",\n          children: gasData.standard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"HORIZONTAL\",\n        space: 'var(--scale-4)',\n        localStyles: {\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Slow, {\n          theme: \"LIGHT\",\n          size: \"S\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Body, {\n          size: \"S\",\n          children: gasData.slow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Body, {\n      size: \"S\",\n      children: \"Loading gas price...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(GasTracker, \"kszQ5yQzpgSwCYdHbI+DFbQGMF4=\");\n_c = GasTracker;\nexport default GasTracker;\nvar _c;\n$RefreshReg$(_c, \"GasTracker\");","map":{"version":3,"names":["React","useState","useEffect","Fast","Medium","Slow","Eth","Stack","Body","GasTracker","gasData","setGasData","ethereumPrice","setEthereumPrice","fetch","then","response","json","data","ethereum","usd","console","error","catch","maxWidth","margin","alignItems","fast","standard","slow"],"sources":["/Users/michaeltrilford/Github/PAYCPreWeb3/src/components/gas.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Fast from './icons/fast';\nimport Medium from './icons/medium';\nimport Slow from './icons/slow';\nimport Eth from './icons/eth';\nimport Stack from './stack';\nimport Body from './body';\n\ninterface GasData {\n  fast: number;\n  standard: number;\n  slow: number;\n}\n\ninterface EthereumPriceData {\n  usd: number;\n}\n\nconst GasTracker: React.FC = () => {\n  const [gasData, setGasData] = useState<GasData | null>(null);\n  const [ethereumPrice, setEthereumPrice] = useState<EthereumPriceData | null>(null);\n\n  useEffect(() => {\n    // Fetch gas price data from Etherscan (similar to previous example)\n\n    // Fetch current Ethereum price from CoinGecko\n    fetch('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd')\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.ethereum && data.ethereum.usd) {\n          setEthereumPrice({ usd: data.ethereum.usd });\n        } else {\n          console.error('Error fetching Ethereum price data');\n        }\n      })\n      .catch((error) => {\n        console.error('Error fetching Ethereum price data:', error);\n      });\n  }, []);\n\n  return (\n    <Stack direction='HORIZONTAL' space={'var(--scale-16)'} localStyles={{maxWidth: 225, margin: '0 auto'}}>\n      <Stack direction='HORIZONTAL' space={'var(--scale-4)'} localStyles={{alignItems: 'center'}}>\n        <Eth theme=\"LIGHT\" size=\"S\" />\n        {ethereumPrice !== null ? (\n          <Body size='S'>${ethereumPrice.usd}</Body>\n        ) : (\n          <Body size='S'>Loading Ethereum price...</Body>\n        )}\n      </Stack>\n      {gasData !== null ? (\n        <>\n          <Stack direction='HORIZONTAL' space={'var(--scale-4)'} localStyles={{alignItems: 'center'}}>\n            <Fast theme=\"LIGHT\" size=\"S\" />\n            <Body size='S'>{gasData.fast}</Body>\n          </Stack>\n          <Stack direction='HORIZONTAL' space={'var(--scale-4)'} localStyles={{alignItems: 'center'}}>\n            <Medium theme=\"LIGHT\" size=\"S\" />\n            <Body size='S'>{gasData.standard}</Body>\n          </Stack>\n          <Stack direction='HORIZONTAL' space={'var(--scale-4)'} localStyles={{alignItems: 'center'}}>\n            <Slow theme=\"LIGHT\" size=\"S\" />\n            <Body size='S'>{gasData.slow}</Body>\n          </Stack>\n        </>\n        ) : (\n        <Body size='S'>Loading gas price...</Body>\n        )}\n    </Stack>\n  );\n};\n\nexport default GasTracker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}