{"ast":null,"code":"import _regeneratorRuntime from\"/Users/michaeltrilford/Github/Sheesh/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/michaeltrilford/Github/Sheesh/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/michaeltrilford/Github/Sheesh/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Fast from'./icons/fast';import Medium from'./icons/medium';import Slow from'./icons/slow';import Eth from'./icons/eth';import Stack from'./stack';import Body from'./body';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GasTracker=function GasTracker(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),gasData=_useState2[0],setGasData=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),ethereumPrice=_useState4[0],setEthereumPrice=_useState4[1];useEffect(function(){// Fetch gas price data from Etherscan\nvar fetchGasData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data,gasPrices;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch('https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=45KHI7UXA3EV6CWK8S2E56RXCTTPPJAC66');case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;if(data.status==='1'){gasPrices={fast:parseInt(data.result.FastGasPrice,10),standard:parseInt(data.result.ProposeGasPrice,10),slow:parseInt(data.result.SafeGasPrice,10)};setGasData(gasPrices);}else{console.error('Error fetching gas data:',data.message);}_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.error('Error fetching gas data:',_context.t0);case 13:case\"end\":return _context.stop();}},_callee,null,[[0,10]]);}));return function fetchGasData(){return _ref.apply(this,arguments);};}();// Fetch current Ethereum price from CoinGecko\nvar fetchEthereumPrice=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var response,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd');case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:data=_context2.sent;if(data.ethereum&&data.ethereum.usd){setEthereumPrice({usd:data.ethereum.usd});}else{console.error('Error fetching Ethereum price data');}_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.error('Error fetching Ethereum price data:',_context2.t0);case 13:case\"end\":return _context2.stop();}},_callee2,null,[[0,10]]);}));return function fetchEthereumPrice(){return _ref2.apply(this,arguments);};}();// Call the API functions\nfetchGasData();fetchEthereumPrice();},[]);return/*#__PURE__*/_jsxs(Stack,{direction:\"HORIZONTAL\",space:'var(--scale-16)',localStyles:{margin:'0 auto',justifyContent:'center','@media (min-width: 1080px)':{justifyContent:'end'}},children:[/*#__PURE__*/_jsxs(Stack,{direction:\"HORIZONTAL\",space:'var(--scale-4)',localStyles:{alignItems:'center',width:'auto'},children:[/*#__PURE__*/_jsx(Eth,{theme:\"LIGHT\",size:\"S\"}),ethereumPrice!==null?/*#__PURE__*/_jsxs(Body,{size:\"S\",children:[\"$\",ethereumPrice.usd]}):/*#__PURE__*/_jsx(Body,{size:\"S\",children:\"Loading Ethereum price...\"})]}),gasData!==null?/*#__PURE__*/_jsxs(Stack,{direction:\"HORIZONTAL\",space:'var(--scale-12)',localStyles:{width:'auto'},children:[/*#__PURE__*/_jsxs(Stack,{direction:\"HORIZONTAL\",space:'var(--scale-4)',localStyles:{alignItems:'center'},children:[/*#__PURE__*/_jsx(Fast,{theme:\"LIGHT\",size:\"S\"}),/*#__PURE__*/_jsx(Body,{size:\"S\",children:gasData.fast})]}),/*#__PURE__*/_jsxs(Stack,{direction:\"HORIZONTAL\",space:'var(--scale-4)',localStyles:{alignItems:'center'},children:[/*#__PURE__*/_jsx(Medium,{theme:\"LIGHT\",size:\"S\"}),/*#__PURE__*/_jsx(Body,{size:\"S\",children:gasData.standard})]}),/*#__PURE__*/_jsxs(Stack,{direction:\"HORIZONTAL\",space:'var(--scale-4)',localStyles:{alignItems:'center'},children:[/*#__PURE__*/_jsx(Slow,{theme:\"LIGHT\",size:\"S\"}),/*#__PURE__*/_jsx(Body,{size:\"S\",children:gasData.slow})]})]}):/*#__PURE__*/_jsx(Stack,{direction:\"HORIZONTAL\",space:'var(--scale-4)',localStyles:{width:'auto',textAlign:'center'},children:/*#__PURE__*/_jsx(Body,{size:\"S\",children:\"Loading gas...\"})})]});};export default GasTracker;","map":{"version":3,"names":["React","useState","useEffect","Fast","Medium","Slow","Eth","Stack","Body","GasTracker","gasData","setGasData","ethereumPrice","setEthereumPrice","fetchGasData","fetch","response","json","data","status","gasPrices","fast","parseInt","result","FastGasPrice","standard","ProposeGasPrice","slow","SafeGasPrice","console","error","message","fetchEthereumPrice","ethereum","usd","margin","justifyContent","alignItems","width","textAlign"],"sources":["/Users/michaeltrilford/Github/Sheesh/src/components/gas.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Fast from './icons/fast';\nimport Medium from './icons/medium';\nimport Slow from './icons/slow';\nimport Eth from './icons/eth';\nimport Stack from './stack';\nimport Body from './body';\n\ninterface GasData {\n  fast: number;\n  standard: number;\n  slow: number;\n}\n\ninterface EthereumPriceData {\n  usd: number;\n}\n\nconst GasTracker: React.FC = () => {\n  const [gasData, setGasData] = useState<GasData | null>(null);\n  const [ethereumPrice, setEthereumPrice] = useState<EthereumPriceData | null>(null);\n\n  useEffect(() => {\n    // Fetch gas price data from Etherscan\n    const fetchGasData = async () => {\n      try {\n        const response = await fetch(\n          'https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=45KHI7UXA3EV6CWK8S2E56RXCTTPPJAC66'\n        );\n        const data = await response.json();\n\n        if (data.status === '1') {\n          const gasPrices: GasData = {\n            fast: parseInt(data.result.FastGasPrice, 10),\n            standard: parseInt(data.result.ProposeGasPrice, 10),\n            slow: parseInt(data.result.SafeGasPrice, 10),\n          };\n          setGasData(gasPrices);\n        } else {\n          console.error('Error fetching gas data:', data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching gas data:', error);\n      }\n    };\n\n    // Fetch current Ethereum price from CoinGecko\n    const fetchEthereumPrice = async () => {\n      try {\n        const response = await fetch(\n          'https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd'\n        );\n        const data = await response.json();\n\n        if (data.ethereum && data.ethereum.usd) {\n          setEthereumPrice({ usd: data.ethereum.usd });\n        } else {\n          console.error('Error fetching Ethereum price data');\n        }\n      } catch (error) {\n        console.error('Error fetching Ethereum price data:', error);\n      }\n    };\n\n    // Call the API functions\n    fetchGasData();\n    fetchEthereumPrice();\n  }, []);\n\n  return (\n    <Stack \n      direction='HORIZONTAL' \n      space={'var(--scale-16)'} \n      localStyles={{\n        margin: '0 auto',\n        justifyContent: 'center',\n        '@media (min-width: 1080px)': {\n          justifyContent: 'end'\n        }\n      }}>\n      <Stack direction='HORIZONTAL' space={'var(--scale-4)'} localStyles={{alignItems: 'center', width: 'auto'}}>\n        <Eth theme=\"LIGHT\" size=\"S\" />\n        {ethereumPrice !== null ? (\n          <Body size='S'>${ethereumPrice.usd}</Body>\n        ) : (\n          <Body size='S'>Loading Ethereum price...</Body>\n        )}\n      </Stack>\n      {gasData !== null ? (\n        <Stack direction='HORIZONTAL' space={'var(--scale-12)'} localStyles={{width: 'auto'}}>\n          <Stack direction='HORIZONTAL' space={'var(--scale-4)'} localStyles={{alignItems: 'center'}}>\n            <Fast theme=\"LIGHT\" size=\"S\" />\n            <Body size='S'>{gasData.fast}</Body>\n          </Stack>\n          <Stack direction='HORIZONTAL' space={'var(--scale-4)'} localStyles={{alignItems: 'center'}}>\n            <Medium theme=\"LIGHT\" size=\"S\" />\n            <Body size='S'>{gasData.standard}</Body>\n          </Stack>\n          <Stack direction='HORIZONTAL' space={'var(--scale-4)'} localStyles={{alignItems: 'center'}}>\n            <Slow theme=\"LIGHT\" size=\"S\" />\n            <Body size='S'>{gasData.slow}</Body>\n          </Stack>\n        </Stack>\n        ) : (\n          <Stack direction='HORIZONTAL' space={'var(--scale-4)'} localStyles={{width: 'auto', textAlign: 'center'}}>\n            <Body size='S'>Loading gas...</Body>\n          </Stack>\n        )\n    }\n    </Stack>\n  );\n};\n\nexport default GasTracker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}